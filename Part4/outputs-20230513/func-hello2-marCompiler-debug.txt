... parsing done
... identification and type checking done
... code generation
Constant pool:
0: <STRING:"!">
1: <STRING:"Mau ">
2: <STRING:"!">
3: <STRING:"Hello ">
4: <STRING:"Maria">
Generated assembly code:
0: JUMP 30
1: LOCAL 1
2: CONST 0
3: STOREL 2
4: CONST 1
5: LOADL -1
6: CONCAT
7: LOADL 2
8: CONCAT
9: RETURN 1
10: POP 1
11: LOCAL 2
12: CONST 2
13: STOREL 3
14: CONST 3
15: LOADL -1
16: CONCAT
17: LOADL 3
18: CONCAT
19: STOREL 2
20: LOADL 2
21: PRINT_S
22: LOADL -1
23: CALL 1
24: STOREL -1
25: LOADL -1
26: PRINT_S
27: POP 2
28: NIL
29: RETURN 1
30: CONST 4
31: CALL 11
32: POP 1
33: HALT
Saving the constant pool and the bytecodes to inputs/func-hello2.marbc
